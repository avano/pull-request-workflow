# HTTP port, if the variable PORT is not defined, use standard 8080 port
quarkus.http.port = ${PORT:8080}
# HTTP port for tests
quarkus.http.test-port = 48081
# Max processing time for vertx messages
quarkus.vertx.max-event-loop-execute-time = 10s
# Print only info into the console
quarkus.log.console.level = INFO
# Use colors in console log
quarkus.log.console.color = true
# Also log to file
quarkus.log.file.enable = true
# Log up to TRACE
quarkus.log.file.level = TRACE
# File name
quarkus.log.file.path = data/pull-request-workflow.log
# Backup files count
quarkus.log.file.rotation.max-backup-index = 3
# Suffix for the rotated files
quarkus.log.file.rotation.file-suffix = .yyyy-MM-dd
# Set TRACE logging for this package
quarkus.log.category."com.github.avano.pr.workflow".level=TRACE

# (token/app) Auth type
config.auth = token
# Username if using token auth
config.user = <user>
# GitHub token if using token auth
config.token = <gh token>
# App ID if using app auth
config.app-id = 123
# Path to private key file of the app if using app auth
config.key-file = <path to key file>
# GitHub webhook secret
config.secret = <gh secret>
# GitHub repository
config.repository = <org/user>/<repository>

# Labels to add when the PR was approved
config.approved-labels = approved
# Labels to add when changes were requested
config.changes-requested-labels = needs-update
# Labels to add when the PR was commented
config.commented-labels = commented
# Labels to add when the review was requested
config.review-requested-labels = review-requested
# Label that specified that the PR is still work in progress
config.wip-label = WIP

# Reason message that will be used when dismissing the review when the PR was updated
config.review-dismiss-message = Pull request was updated
# Message to add to the merge
config.merge-message = ðŸ¤– Merged by https://github.com/avano/pull-request-workflow
# Message that will be posted if some other PR causes a conflict in other PR. Use <ID> placeholder for the pull request id that caused the conflict
config.conflict-message = Pull request #<ID> caused a conflict in this PR

# (any/all) If it is enough when one reviewer approves the PR, or if all requested reviewers need to approve
config.approval-strategy = any
# (merge/squash/rebase) Method to use when merging the PR
config.merge-method = merge

# Review check name that will be created in GitHub
config.review-check-name = review
